reviews <- read.csv('~/NYCDSA/cohort/unit_5_data__analysis_with_python/introduction_to_web_scraping/reviews.csv', stringsAsFactors = F)
Veiw(reviews)
View(reviews)
runApp('~/NYCDSA/Cohort/projects/shiny/gunviolence/dashboard')
?legend.key.size
runApp('~/NYCDSA/Cohort/projects/shiny/gunviolence/dashboard')
grid::unit(schmeckle, 5)
?grid::unit
runApp('~/NYCDSA/Cohort/projects/shiny/gunviolence/dashboard')
runApp('~/NYCDSA/Cohort/projects/shiny/gunviolence/dashboard')
library(rsconnect)
deployApp()
runApp('~/NYCDSA/Cohort/projects/shiny/gunviolence/dashboard')
runApp('~/NYCDSA/Cohort/projects/shiny/gunviolence/dashboard')
deployApp()
shiny::runApp('~/NYCDSA/Cohort/projects/shiny/gunviolence/dashboard')
runApp('~/NYCDSA/Cohort/projects/shiny/gunviolence/dashboard')
IncRaceStateIncome = read.csv('../data/clean/IncRaceStateIncome.csv', stringsAsFactors = F)
IncRaceStateIncome = read.csv('../IncRaceStateIncome.csv', stringsAsFactors = F)
IncRaceStateIncome = read.csv('IncRaceStateIncome.csv', stringsAsFactors = F)
setwd("~/NYCDSA/Cohort/projects/shiny/gunviolence/dashboard")
IncRaceStateIncome = read.csv('IncRaceStateIncome.csv', stringsAsFactors = F)
View(IncRaceStateIncome)
inc_raw <- read.csv('../data/clean/incidents.csv', stringsAsFactors = F)
View(inc_raw)
inc_raw <- read.csv('../data/clean/gun_violence.csv', stringsAsFactors = F)
inc_raw <- read.csv('../data/gun_violence.csv', stringsAsFactors = F)
View(inc_raw)
# Data Frames ####
# incidents ##################################################################
df_stat = read.csv('IncRegIncome.csv', stringsAsFactors = F)
View(df_stat)
View(inc_raw)
View(inc_raw)
View(df_stat)
inc_by_stateinc_raw %>%
group_by(., state) %>%
summarise(., number_of_incidents = n())
inc_by_state = inc_raw %>%
group_by(., state) %>%
summarise(., number_of_incidents = n())
View(inc_by_state)
inc_by_state_year = inc_raw %>%
group_by(., state, year(date)) %>%
summarise(., number_of_incidents = n())
View(inc_by_state_year)
# pull in regulations by state for same number of years as the incident database, and name it reg_5yr.
reg <- read.csv('../data/clean/reg.csv')
View(reg)
View(reg)
View(IncRaceStateIncome)
View(reg)
med <- read.csv('../data/clean/med.csv')
View(med)
inc_raw %>%
group_by(., year) %>%
summarise(., number_incidents = n())
inc_raw %>%
group_by(., year(date)) %>%
summarise(., number_incidents = n())
df1 = inc_raw %>%
group_by(., year(date)) %>%
summarise(., number_incidents = n())
View(df1)
View(inc_raw)
View(med)
df <- read.csv('../data/sect203_all_areas.csv', stringsAsFactors = F)
View(df)
pop2016 <- read.csv('../data/pop/cc-est2018-alldata.csv', stringsAsFactors = F)
View(pop2016)
pop2016 <- read.csv('../data/pop/PEP_2016_PEPANNRES_with_ann.csv', stringsAsFactors = F)
pop2016 <- read.csv('../data/PEP_2016_PEPANNRES_with_ann.csv', stringsAsFactors = F)
View(pop2016)
pop2016[, c(3,12)]
pop2016 = pop2016[, c(3,12)]
# median household income by state -- this is only for 2015
med2016 <- read.csv('../data/med2016.csv', stringsAsFactors = F)
View(pop2016)
View(med2016)
View(df_stat)
colnames(med2016) = c('state', 'med_household_income')
View(med2016)
med2016 %>%
filter(., state != 'D.C.')
med2016 = med2016 %>%
filter(., state != 'D.C.')
med2016$med_household_income = as.integer(med2016$med_household_income)
# median household income by state -- this is only for 2015
med2016 <- read.csv('../data/med2016.csv', stringsAsFactors = F)
colnames(med2016) = c('state', 'med_household_income')
med2016 = med2016 %>%
filter(., state != 'D.C.')
med2016$med_household_income = as.numeric(med2016$med_household_income)
# median household income by state -- this is only for 2015
med2016 <- read.csv('../data/med2016.csv', stringsAsFactors = F)
colnames(med2016) = c('state', 'med_household_income')
med2016 = med2016 %>%
filter(., state != 'D.C.')
med2016$med_household_income = as.number(med2016$med_household_income)
as.numeric(gsub(',', '', med2016$med_household_income))
med2016$med_household_income = as.numeric(gsub(',', '', med2016$med_household_income))
View(med2016)
View(pop2016)
colnames(pop2016) = c('state', 'pop')
pop2016 = pop2016 %>%
filter(., state != c('Geography', 'United States', 'District of Columbia'))
pop2016 = pop2016 %>%
filter(., state != c('Geography', 'United States', 'District of Columbia', 'Puerto Rico'))
pop2016 = pop2016 %>%
filter(., state != c('Geography', 'United States', 'District of Columbia ', 'Puerto Rico'))
pop2016 = pop2016 %>%
filter(., state != c('Geography', 'United States', 'District of Columbia', 'Puerto Rico'))
pop2016 = pop2016 %>%
filter(., state != 'District of Columbia')
as.numeric(pop2016$pop)
pop2016 = as.numeric(pop2016$pop)
group_by(., state) %>%
summarise(., number_of_incidents = n())
inc_by_state_year = inc_raw %>%
filter(., year(date) == 2016) %>%
group_by(., state) %>%
summarise(., number_of_incidents = n())
inc_by_state = inc_raw %>%
filter(., year(date) == 2016) %>%
group_by(., state) %>%
summarise(., number_of_incidents = n())
inc_by_state2016 = inc_raw %>%
filter(., year(date) == 2016) %>%
group_by(., state) %>%
summarise(., number_of_incidents = n())
View(inc_by_state2016)
inc_by_state2016 = inc_raw %>%
filter(., year(date) == 2016 & state != 'District of Columbia') %>%
group_by(., state) %>%
summarise(., number_of_incidents = n())
View(inc_by_state2016)
inc2016 = inc_raw %>%
filter(., year(date) == 2016 & state != 'District of Columbia') %>%
group_by(., state) %>%
summarise(., number_of_incidents = n())
View(reg)
reg2016 = reg %>%
filter(., year == 2016)
View(reg2016)
reg2016 = reg %>%
filter(., year == 2016) %>%
select(., state, num_regulations)
#join
inner_join(inc2016, reg2016, by = 'state' )
#join
df1 = inner_join(inc2016, reg2016, by = 'state' )
View(inc2016)
# pull in regulations by state for 2016.
reg <- read.csv('../data/clean/reg.csv', stringsAsFactors = F)
reg2016 = reg %>%
filter(., year == 2016) %>%
select(., state, num_regulations)
View(reg2016)
#join
df1 = inner_join(inc2016, reg2016, by = 'state' )
View(df1)
d22 = inner_join(df1, med2016, by = 'state')
IncRegMed = inner_join(d22, pop2016, by = 'state')
View(d22)
pop2016 <- read.csv('../data/PEP_2016_PEPANNRES_with_ann.csv', stringsAsFactors = F)
pop2016 = pop2016[, c(3,12)]
colnames(pop2016) = c('state', 'pop')
pop2016 = pop2016 %>%
filter(., state != 'District of Columbia')
pop2016 = as.numeric(pop2016$pop)
pop2016 <- read.csv('../data/PEP_2016_PEPANNRES_with_ann.csv', stringsAsFactors = F)
View(pop2016)
pop2016 = pop2016[, c(3,12)]
colnames(pop2016) = c('state', 'pop')
View(pop2016)
filter(., state != c('District of Columbia', 'United States', 'Geography', 'Puerto Rico')
View(pop2016)
pop2016 = pop2016 %>%
filter(., state != c('District of Columbia', 'United States', 'Geography', 'Puerto Rico'))
pop2016 = pop2016 %>%
filter(., state !%in% c('District of Columbia', 'United States', 'Geography', 'Puerto Rico'))
pop2016 = pop2016 %>%
filter(., state != %in% c('District of Columbia', 'United States', 'Geography', 'Puerto Rico'))
pop2016 <- read.csv('../data/PEP_2016_PEPANNRES_with_ann.csv', stringsAsFactors = F)
pop2016 = pop2016[, c(3,12)]
colnames(pop2016) = c('state', 'pop')
pop2016 = pop2016 %>%
filter(., state %in% c(df1$state))
View(pop2016)
pop2016 = as.numeric(pop2016$pop)
pop2016 <- read.csv('../data/PEP_2016_PEPANNRES_with_ann.csv', stringsAsFactors = F)
pop2016 = pop2016[, c(3,12)]
colnames(pop2016) = c('state', 'pop')
pop2016 = pop2016 %>%
filter(., state %in% c(df1$state))
pop2016$pop = as.numeric(pop2016$pop)
pop2016$pop = as.numeric(pop2016$pop)
View(pop2016)
IncRegMed = inner_join(d22, pop2016, by = 'state')
View(IncRegMed)
IncRegMed = IncRegMed %>%
mutate(., incidents_per_pop = number_of_incidents/pop) %>%
select(., != number_of_incidents, != pop)
IncRegMed = IncRegMed %>%
mutate(., incidents_per_pop = number_of_incidents/pop) %>%
select(., state, incidents_per_pop, med_household_income)
IncRegMed = inner_join(d22, pop2016, by = 'state')
IncRegMed = IncRegMed %>%
mutate(., incidents_per_pop = number_of_incidents/pop) %>%
select(., state, num_regulations, incidents_per_pop, med_household_income)
votes <- read.csv('../data/Election2016.csv', stringsAsFactors = F)
View(votes)
votes$state[20] = 'Maine'
votes$state[30] = 'Nebraska'
votes %>%
filter(., state %in% c(IncRegMed$state))
votes = votes %>%
filter(., state %in% c(IncRegMed$state))
View(votes)
colnames(votes) = c('state', 'hillary_clinton', 'donald_trump', 'gary_johnson', 'jill_stein', 'evan_mcmullin', 'other')
View(votes)
# gotta get rid of those percent symbols...
gsub('%', '', votes)
View(votes)
# gotta get rid of those percent symbols...
votes = gsub('%', '', votes)
votes <- read.csv('../data/Election2016.csv', stringsAsFactors = F)
votes$state[20] = 'Maine'
votes$state[30] = 'Nebraska'
votes = votes %>%
filter(., state %in% c(IncRegMed$state))
colnames(votes) = c('state', 'hillary_clinton', 'donald_trump', 'gary_johnson', 'jill_stein', 'evan_mcmullin', 'other')
View(votes)
print('hi')
# gotta get rid of those percent symbols...
for (i in range(2:length(colnames(votes)))) {
print('hi')
}
range(1,10)
range(1:10)
# gotta get rid of those percent symbols...
for (i in 2:length(colnames(votes)[-1]){
# gotta get rid of those percent symbols...
for (i in 2:length(colnames(votes)[-1]))){
print('hi')
}
# gotta get rid of those percent symbols...
for (i in 2:length(colnames(votes)[-1])) {
print('hi')
}
print(colames(votes)[i])
# gotta get rid of those percent symbols...
for (i in 1:length(colnames(votes)[-1])) {
print(colames(votes)[i])
}
print(colnames(votes)[i])
length(colnames(votes))
print(colnames(votes)[i])
print(colnames(votes)[i])
# gotta get rid of those percent symbols...
for (i in 2,7) {
print(colnames(votes)[i])
}
# gotta get rid of those percent symbols...
for (i in [2:7]) {
print(colnames(votes)[i])
}
# gotta get rid of those percent symbols...
for i in [2:7] {
print(colnames(votes)[i])
}
print('hi')
print('hi')
# gotta get rid of those percent symbols...
for (i in 5) {
print('hi')
}
# gotta get rid of those percent symbols...
for (i in range(1:5) {
# gotta get rid of those percent symbols...
for (i in range(1:5)) {
print('hi')
}
# gotta get rid of those percent symbols...
for (i in range(1,5)) {
print('hi')
}
print('hi')
print(i)
print(i)
# gotta get rid of those percent symbols...
for (j in 1:10) {
print(i)
}
print(j)
print(colnames(votes)[j])
colnames(votes)
colnames(votes)[0]
colnames(votes)[1]
colnames(votes)[2]
colnames(votes)[-1]
print(h)
for (i in 1:10) {
print(h)
}
for (h in 1:10) {
print(h)
}
print(colnames(votes)[j])
print(colnames(votes)[j])
for (j in 1:6) {
print(colnames(votes)[j])
}
votes['state']
for (j in 2:7) {
votes[colnames(votes)[j]] = gsub('%', '', votes[colnames(votes)[j]])
}
View(votes)
votes <- read.csv('../data/Election2016.csv', stringsAsFactors = F)
votes$state[20] = 'Maine'
votes$state[30] = 'Nebraska'
votes = votes %>%
filter(., state %in% c(IncRegMed$state))
colnames(votes) = c('state', 'hillary_clinton', 'donald_trump', 'gary_johnson', 'jill_stein', 'evan_mcmullin', 'other')
View(votes)
votes[colnames(votes)[2]] = gsub('%', '', votes[colnames(votes)[2]])
View(votes)
votes <- read.csv('../data/Election2016.csv', stringsAsFactors = F)
votes$state[20] = 'Maine'
votes$state[30] = 'Nebraska'
votes = votes %>%
filter(., state %in% c(IncRegMed$state))
colnames(votes) = c('state', 'hillary_clinton', 'donald_trump', 'gary_johnson', 'jill_stein', 'evan_mcmullin', 'other')
for (j in 2:7) {
votes[colnames(votes)[j]] = gsub('%', '', votes[colnames(votes)[j]])
}
votes <- read.csv('../data/Election2016.csv', stringsAsFactors = F)
votes$state[20] = 'Maine'
votes$state[30] = 'Nebraska'
votes = votes %>%
filter(., state %in% c(IncRegMed$state))
colnames(votes) = c('state', 'hillary_clinton', 'donald_trump', 'gary_johnson', 'jill_stein', 'evan_mcmullin', 'other')
gsub('%', '', votes$hillary_clinton )
votes$hillary_clinton = gsub('%', '', votes$hillary_clinton )
votes$item = gsub('%', '', votes$item)
votes[colnames(votes)[2]]
votes[colnames(votes)[3]] = gsub('%', '', votes[colnames(votes)[3]])
votes$colnames(votes)[3]
votes$(colnames(votes)[3])
votes <- read.csv('../data/Election2016.csv', stringsAsFactors = F)
votes$state[20] = 'Maine'
votes$state[30] = 'Nebraska'
votes = votes %>%
filter(., state %in% c(IncRegMed$state))
colnames(votes) = c('state', 'hillary_clinton', 'donald_trump', 'gary_johnson', 'jill_stein', 'evan_mcmullin', 'other')
votes$hillary_clinton = gsub('%', '', votes$hillary_clinton )
votes$donald_trump = gsub('%', '', votes$donald_trump )
votes$gary_johnson = gsub('%', '', votes$gary_johnson )
votes$jill_stein = gsub('%', '', votes$jill_stein )
votes$evan_mcmullin = gsub('%', '', votes$evan_mcmullin )
votes$other = gsub('%', '', votes$other )
votes <- read.csv('../data/Election2016.csv', stringsAsFactors = F)
votes$state[20] = 'Maine'
votes$state[30] = 'Nebraska'
votes = votes %>%
filter(., state %in% c(IncRegMed$state))
colnames(votes) = c('state', 'hillary_clinton', 'donald_trump', 'gary_johnson', 'jill_stein', 'evan_mcmullin', 'other')
votes$hillary_clinton = as.numeric(gsub('%', '', votes$hillary_clinton ))
votes$donald_trump = as.numeric(gsub('%', '', votes$donald_trump ))
votes$gary_johnson = as.numeric(gsub('%', '', votes$gary_johnson ))
votes$jill_stein = as.numeric(gsub('%', '', votes$jill_stein ))
votes$evan_mcmullin = as.numeric(gsub('%', '', votes$evan_mcmullin ))
votes$other = as.numeric(gsub('%', '', votes$other ))
write.csv(votes, '../data/clean/percent_votes2016.csv', na = 'NA', row.names = F)
IncRegMedVotes = inner_join(IncRegMed, votes, by = 'state')
library(dplyr)
IncRegMedVotes = inner_join(IncRegMed, votes, by = 'state')
View(IncRegMedVotes)
write.csv(IncRegMedVotes, '../data/clean/percent_votes2016.csv', na = 'NA', row.names = F)
write.csv(IncRegMedVotes, '../data/clean/IncRegMedVotes.csv', na = 'NA', row.names = F)
write.csv(votes, '../data/clean/percent_votes2016.csv', na = 'NA', row.names = F)
View(IncRegMedVotes)
View(IncRegMedVotes)
shiny::runApp()
View(inc2016)
View(inc2016)
IncRegMedVotes = inner_join(IncRegMedVotes, inc2016, by = 'state')
tester = IncRegMedVotes[c(1,11,2,3,4,5,6,7,8,9,10)]
View(tester)
IncRegMedVotes = IncRegMedVotes[c(1,11,2,3,4,5,6,7,8,9,10)]
colnames(IncRegMedVotes)[2] = 'num_incidents'
write.csv(IncRegMedVotes, '../data/clean/IncRegMedVotes.csv', na = 'NA', row.names = F)
runApp()
#normalize the incidents_per_pop
tester = df_stat %>%
mutate(., norm_inc_per_pop = incidents_per_pop/sum(incidents_per_pop))
View(tester)
# Data Frames ####
# incidents ##################################################################
df_stat = read.csv('IncRegMedVotes.csv', stringsAsFactors = F)
tester
#normalize the incidents_per_pop
tester = df_stat %>%
mutate(., norm_inc_per_pop = incidents_per_pop/sum(incidents_per_pop))
View(tester)
# Data Frames ####
# incidents ##################################################################
df_stat = read.csv('IncRegMedVotes.csv', stringsAsFactors = F)
#normalize the incidents_per_pop
tester = df_stat %>%
mutate(., norm_inc_per_pop = incidents_per_pop/sum(incidents_per_pop))
View(df_stat)
# Data Frames ####
# incidents ##################################################################
df_stat = read.csv('IncRegMedVotes.csv', stringsAsFactors = F)
#normalize the incidents_per_pop
tester = df_stat %>%
mutate(., norm_inc_per_pop = incidents_per_pop/sum(incidents_per_pop))
View(tester)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
colnames(df_stat)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?xlab
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(mass)
runApp()
runApp()
View(df_stat)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(df_stat)
runApp()
runApp()
runApp()
runApp()
runApp()
mass %>%
select(., Title)
View(mass)
runApp()
runApp()
?datatable
runApp()
runApp()
runApp()
runApp()
runApp()
library(rsconnect)
library(rsconnect)
deployApp()
